<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Machine Learning on Valen Yamamoto</title><link>https://ValenYamamoto.github.io/tags/machine-learning/</link><description>Recent content in Machine Learning on Valen Yamamoto</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 25 Feb 2022 20:45:42 -0700</lastBuildDate><atom:link href="https://ValenYamamoto.github.io/tags/machine-learning/index.xml" rel="self" type="application/rss+xml"/><item><title>Intro to the Nvidia Jetson Nano</title><link>https://ValenYamamoto.github.io/2022/02/intro-to-the-nvidia-jetson-nano/</link><pubDate>Fri, 25 Feb 2022 20:45:42 -0700</pubDate><guid>https://ValenYamamoto.github.io/2022/02/intro-to-the-nvidia-jetson-nano/</guid><description>NVIDIA graciously provided the IEEE@UCI with 15 Jetson Nano single board computers to use for educational purposes, so I held a workshop allowing people to run through the Hello AI World tutorial NVIDIA set up.</description></item><item><title>Machine Learning Internship @ LLNL</title><link>https://ValenYamamoto.github.io/2021/11/machine-learning-internship-llnl/</link><pubDate>Sat, 20 Nov 2021 20:46:33 -0700</pubDate><guid>https://ValenYamamoto.github.io/2021/11/machine-learning-internship-llnl/</guid><description>My second summer internship at Lawrence Livermore National Laboratory (LLNL) focused on comparing machine learning inference performance on novel AI hardware accelerators from Samba Nova and Cerebras to NVIDIA GPUs. I was working with a autoencoder model used to material interface reconstruction (MIR) for multi-material hydrodynamics codes. The neural network was proposed as an alternative to current solution PLIC: the neural network provided much smoother, continuous boundaries than PLIC, which could only give linear approximations.</description></item><item><title>Deep Learning Framework in C++</title><link>https://ValenYamamoto.github.io/2020/12/deep-learning-framework-in-c-/</link><pubDate>Tue, 08 Dec 2020 17:38:57 -0700</pubDate><guid>https://ValenYamamoto.github.io/2020/12/deep-learning-framework-in-c-/</guid><description>Github Repository
Ever since I started learning PyTorch, I have been fascinated by the automatic gradient feature. In order to further understand it, I decided I would try to write my own version. At the time, I was also taking a C++ class, so I decided to both learn about autograd and study for my finals. (As well as do the required project to initiate into IEEE-HKN)
This program dynamically constructs a computation graph as operations are done.</description></item><item><title>Neural Networks with PyTorch Workshop</title><link>https://ValenYamamoto.github.io/2020/10/neural-networks-with-pytorch-workshop/</link><pubDate>Thu, 15 Oct 2020 20:46:10 -0700</pubDate><guid>https://ValenYamamoto.github.io/2020/10/neural-networks-with-pytorch-workshop/</guid><description>Github Repository
For my first workshop for the IEEE@UCI, I wanted to talk about something I found interesting, so I decided to do a workshop on neural networks. Because of its recently growing popularity, most engineering students have heard of neural networks, even if they don&amp;rsquo;t necessarily understand how they work.
My goal with this workshop was to both introduce people to the math behind neural networks and to let people have hands-on practice composing and training a neural network.</description></item></channel></rss>