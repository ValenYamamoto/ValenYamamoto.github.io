<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>internship on Valen Yamamoto</title><link>https://ValenYamamoto.github.io/tags/internship/</link><description>Recent content in internship on Valen Yamamoto</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 20 Aug 2022 20:46:38 -0700</lastBuildDate><atom:link href="https://ValenYamamoto.github.io/tags/internship/index.xml" rel="self" type="application/rss+xml"/><item><title>JPL M2020 Internship</title><link>https://ValenYamamoto.github.io/2022/08/jpl-m2020-internship/</link><pubDate>Sat, 20 Aug 2022 20:46:38 -0700</pubDate><guid>https://ValenYamamoto.github.io/2022/08/jpl-m2020-internship/</guid><description>I worked in Section 374K with Justin Huang implementing RRTConnect has a motion planning algorithm for the the 5 DOF arms on the Mars rovers. Usually in motion planning, paths are smoothed to make corners into curves for less jerky motion; however, for space robotics, planners try to send the least amount of data through space to the rovers so the minimal number of viapoints is preferred. So instead of smoothing the RRT-generated paths, I spent the majority of my time simplifying the paths to the smallest number of viapoints.</description></item><item><title>Machine Learning Internship @ LLNL</title><link>https://ValenYamamoto.github.io/2021/11/machine-learning-internship-@-llnl/</link><pubDate>Sat, 20 Nov 2021 20:46:33 -0700</pubDate><guid>https://ValenYamamoto.github.io/2021/11/machine-learning-internship-@-llnl/</guid><description>My second summer internship at Lawrence Livermore National Laboratory (LLNL) focused on comparing machine learning inference performance on novel AI hardware accelerators from Samba Nova and Cerebras to NVIDIA GPUs. I was working with a autoencoder model used to material interface reconstruction (MIR) for multi-material hydrodynamics codes. The neural network was proposed as an alternative to current solution PLIC: the neural network provided much smoother, continuous boundaries than PLIC, which could only give linear approximations.</description></item></channel></rss>